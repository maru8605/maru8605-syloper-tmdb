{"version":3,"sources":["image/logo-tm.svg","components/Navbar.js","service/index.js","components/Carousel.js","components/CarouselContainer.js","components/MoviesCard.js","components/MoviesCardsContainer.js","sections/Home.js","components/ActorsCard.js","sections/Movie.js","components/Card.js","sections/SearchResult.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","useState","search","setSearch","className","src","Logo","alt","type","placeholder","onChange","e","target","value","name","to","apiKey","url","nowPlayingUrl","movieUrl","fetchMovies","a","axios","get","params","api_key","language","page","data","posterUrl","modifiedData","map","m","id","backPoster","popularity","title","poster","overview","rating","fetchMovieDetail","fetchActors","c","idC","character","img","Carousel","item","CarouselContainer","playingnow","setPlayingNow","useEffect","fetchApi","animation","autoplay","pauseOnVisibility","slidesshowSpeed","version","slice","index","MoviesCard","style","fontWeight","count","size","color","MoviesCardsContainer","currentmovies","setCurrentMovies","Home","ActorsCard","Movie","match","moviedetail","setMovieDetail","actors","setActors","poster_path","vote_average","width","Card","SearchResult","query","URLSearchParams","useLocation","result","setResult","respuesta","results","App","exact","path","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1ad994a6.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo-tm.bf7f470b.svg\";","import React, {useState} from 'react';\r\nimport {Link } from 'react-router-dom'\r\nimport '../sass/component/_navbar.scss'\r\nimport Logo from '../image/logo-tm.svg'; \r\n\r\n\r\n \r\n\r\nconst Navbar = () => {\r\n\r\n    const [search, setSearch] = useState('')\r\n    \r\n\r\n    const onChange = e => {\r\n        setSearch (    \r\n            [e.target.name] = e.target.value\r\n        )      \r\n        \r\n    }\r\n\r\n    return (\r\n        <nav className='container-fluid py-4 nav d-flex justify-content-between'>\r\n            <div className='logo  mx-5'>\r\n                <img src={Logo} alt='The Movie Database' />\r\n            </div>\r\n            <form \r\n            className='search mx-5' >\r\n                <input\r\n                    type='text'\r\n                    placeholder='Buscar'\r\n                    className='search-input'\r\n                    onChange={onChange}\r\n                    name={search}\r\n                    \r\n                />\r\n                <Link to={'/search/?name='+search}>\r\n                    <input\r\n                        type='submit'\r\n                        value='Buscar'\r\n                        className='search-btn'\r\n                    />\r\n                </Link>\r\n            </form>\r\n        </nav>\r\n    )\r\n}\r\n\r\nexport default Navbar\r\n\r\n  \r\n    \r\n  \r\n    \r\n  ","import axios from 'axios';\r\n\r\nconst apiKey = 'a2c5b0aa63f4810637029fdd61a1549b'\r\nconst url = 'https://api.themoviedb.org/3'\r\n\r\nconst nowPlayingUrl =  `${url}/movie/now_playing`;\r\nconst movieUrl = `${url}/movie`;\r\n\r\n\r\n// trae las peliculas estrenos\r\nexport const fetchMovies = async () => {\r\n    try {\r\n        const { data } = await axios.get(nowPlayingUrl, {\r\n            params: {\r\n                api_key: apiKey,\r\n                language: 'es',\r\n                page: 1\r\n            }\r\n        })\r\n\r\n        const posterUrl = 'https://image.tmdb.org/t/p/original/';\r\n        const modifiedData = data['results'].map((m) => ({\r\n            id: m['id'],\r\n            backPoster: posterUrl + m['backdrop_path'],\r\n            popularity: m['popularith'],\r\n            title: m['title'],\r\n            poster: posterUrl + m['poster_path'],\r\n            overview: m['overview'],\r\n            rating: m['vote_average'],\r\n        }))\r\n\r\n        return modifiedData;\r\n    } catch(error){}\r\n}\r\n\r\n//Trae informacion de pelicula por id\r\nexport const fetchMovieDetail = async (id) => {\r\n    try {\r\n        const { data } = await axios.get(`${movieUrl}/${id}`, {\r\n            params: {\r\n                api_key: apiKey,\r\n                language: 'es'\r\n            }\r\n        });\r\n        return data;\r\n\r\n    } catch (error) { }\r\n}\r\n\r\n//trae a los actores de las peliculas\r\nexport const fetchActors = async(id) => {\r\n    try{\r\n        const { data } = await axios.get(`${movieUrl}/${id}/credits`, {\r\n            params: {\r\n                api_key: apiKey,\r\n            }\r\n        });\r\n        const modifiedData = data['cast'].map((c) => ({\r\n            idC: c['cast_id'],\r\n            character : c['character'],\r\n            name: c['name'],\r\n            img: 'https://image.tmdb.org/t/p/w200' + c['profile_path'],\r\n        }))\r\n        return modifiedData;\r\n    } catch (error) { }\r\n}","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {Link} from 'react-router-dom'; \r\nimport '../sass/component/_carousel.scss';\r\n\r\n\r\nconst Carousel = ({item}) => {\r\n\r\nconst {title, backPoster, id, overview} = item;\r\n\r\n    return (  \r\n        <div className='carrusel' >\r\n            <div className='carousel-center img-movie'>\r\n                <Link to={`/movie/${id}`}>\r\n                    <img className='img-fluid position-relative' alt={title} src={backPoster}  />\r\n                </Link> \r\n                <div className='description-container'>\r\n                    <div className='overview position-absolute bottom-0 start-50 translate-middle-x   mb-2 px-2'>\r\n                        <div className=' text-center'>{title}</div>\r\n                        <p className=' '>{overview}</p>\r\n                    </div>\r\n                </div>    \r\n            </div>            \r\n        </div>\r\n    \r\n    )\r\n}\r\nCarousel.propTypes = {\r\n    item: PropTypes.object.isRequired  \r\n }\r\nexport default Carousel;\r\n","import React, {useState, useEffect} from 'react'\r\nimport RBCarousel from 'react-bootstrap-carousel';\r\n\r\nimport {fetchMovies} from '../service';\r\nimport Carousel from './Carousel'\r\n\r\nconst CarouselContainer = () => {\r\n    const [playingnow, setPlayingNow] = useState([])\r\n    \r\n\r\n    useEffect(() => {\r\n        const fetchApi = async() => {\r\n            setPlayingNow( await fetchMovies())  \r\n        }\r\n        \r\n        fetchApi()    \r\n    }, []);\r\n\r\n return(\r\n        <>\r\n        <RBCarousel\r\n            animation={true}\r\n            autoplay={true}\r\n            pauseOnVisibility={true}\r\n            slidesshowSpeed={5000}\r\n            version={4}\r\n        >\r\n        {playingnow.slice(0,5).map((item, index) => (\r\n            <Carousel\r\n                key={index}\r\n                item={item}\r\n            />\r\n        ) )      \r\n        }\r\n        \r\n        </RBCarousel>\r\n        </>\r\n    )      \r\n}\r\n\r\nexport default CarouselContainer\r\n\r\n\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport '../sass/section/_movie.scss';\r\nimport {Link} from 'react-router-dom'\r\nimport ReactStars from 'react-rating-stars-component'\r\n\r\nconst MoviesCard = ( {item} ) => {\r\n\r\n    const {title, poster, rating, id} = item;\r\n\r\n    return (\r\n        <div className='col-md-3 col-sm-6 mb-3'>\r\n            <div className='card'>\r\n                <Link to={`/movie/${id}`}>\r\n                    <img src={poster} alt={title} className='img-fluid'/>                   \r\n                </Link>               \r\n            </div>   \r\n            <div className='mt-3'>\r\n                <p style={{fontWeight : 'bolder'}}>{title}</p>\r\n                <div className='d-flex justify-content-between' >\r\n                    <ReactStars count={rating} size={20} color={'#f4c10f'} className='d-inline'/>\r\n                    <p className='fw-bold'> {rating} </p>\r\n                </div>\r\n            </div>     \r\n        </div>\r\n    )\r\n}\r\nMoviesCard.propTypes = {\r\n    item: PropTypes.object.isRequired  \r\n }\r\nexport default MoviesCard\r\n","import React, {useState, useEffect} from 'react'\r\nimport {fetchMovies} from '../service';\r\nimport MoviesCard from './MoviesCard';\r\n\r\nconst MoviesCardsContainer = () => {\r\n\r\n    const [currentmovies, setCurrentMovies] = useState([])\r\n    \r\n\r\n    useEffect(() => {\r\n        const fetchApi = async() => {\r\n            setCurrentMovies( await fetchMovies())\r\n           \r\n        }\r\n        \r\n        fetchApi()\r\n        \r\n    }, []);\r\n\r\n return(\r\n    <div className='row mt-3 '>\r\n    \r\n    {currentmovies.map((item, index) => (\r\n        <MoviesCard\r\n            key={index}\r\n            item={item}\r\n        />\r\n        ) )      \r\n    }\r\n      \r\n    </div>\r\n     \r\n    \r\n )\r\n}\r\n\r\nexport default MoviesCardsContainer\r\n","import React  from 'react'\r\nimport CarouselContainer from '../components/CarouselContainer'\r\nimport MoviesCardsContainer from '../components/MoviesCardsContainer'\r\n\r\n\r\nconst Home = () => {\r\n\r\n    \r\n    return (\r\n        \r\n        <div className='container'>\r\n            <div className='row mt-2'>\r\n                <div className='col'>\r\n                    <h2 className='my-4'> Cartelera</h2>\r\n                    \r\n                    <CarouselContainer/>\r\n\r\n                    <h2 className='my-4'> Peliculas </h2>\r\n\r\n                    <MoviesCardsContainer/>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        \r\n    )\r\n}\r\n\r\nexport default Home\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst ActorsCard = ({item}) => {\r\n    \r\n    const {img, character, name} = item\r\n\r\n    return (\r\n        <div className='col-md-3  text-center'>\r\n            <img className='img-fluid mx-auto d-block rounded'\r\n             src={img} alt={name}/>\r\n             <div>\r\n                <p className=' text-center'>{name}</p>\r\n                <p className='text-center fw-bold'> {character}</p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nActorsCard.propTypes = {\r\n    item: PropTypes.array.isRequired  \r\n }\r\nexport default ActorsCard\r\n"," import React, {useState, useEffect} from 'react';\r\n import PropTypes from 'prop-types';\r\nimport {fetchMovieDetail} from '../service/index';\r\nimport { fetchActors } from '../service';\r\nimport {Link} from 'react-router-dom';\r\nimport ReactStars from 'react-rating-stars-component';\r\nimport ActorsCard from '../components/ActorsCard'\r\n\r\n\r\nconst Movie = ({match}) => {\r\n     let params = match.params\r\n\r\n     const [moviedetail, setMovieDetail] = useState([])\r\n     const [actors, setActors] = useState([]);\r\n\r\n     const { title,  poster_path, overview, vote_average} = moviedetail;\r\n     \r\n\r\n     useEffect(() => {\r\n         const fetchApi = async() => {\r\n            setMovieDetail( await fetchMovieDetail(params.id))\r\n            setActors ( await fetchActors(params.id))\r\n         }\r\n        \r\n         fetchApi()\r\n     }, [params.id])\r\n\r\n     \r\n    return (\r\n\r\n        <div className='row mt-3 mb-5 mx-2'>\r\n            <div className='col-md-8 col-sm-6'>\r\n                <div className='container'>\r\n                    <div className='row mt-2'>\r\n                        <div className='col text-center'style={{width: '100%'}}>\r\n                            <img className='img-fluid'\r\n                                src={`http://image.tmdb.org/t/p/original/${poster_path}`}\r\n                                alt={title} />           \r\n                        </div>\r\n                    </div> \r\n                </div>\r\n            </div>\r\n            <div className='col-md-4 col-sm-6'>\r\n                <h2>{title}</h2>\r\n                <div className='d-flex  align-item-center' >\r\n                    <ReactStars count={vote_average} size={20} color='#f4c10f' />\r\n                    <p className='fw-bold ps-3'> {vote_average} </p>\r\n                </div>\r\n                <p className='pe-3'>{overview}</p>\r\n                <Link to={'/'}>\r\n                    <input\r\n                        type='button'\r\n                        value='Regresar'\r\n                        className='regresar-btn'\r\n                    />\r\n                </Link>\r\n            </div>\r\n            <div className='row mt-5'>\r\n                {actors.slice(0, 6).map((item, index) => (\r\n                    <ActorsCard\r\n                        key={index}\r\n                        item={item}\r\n                    />\r\n                ))}\r\n            </div>    \r\n       </div>\r\n    )\r\n}\r\nMovie.propTypes = {\r\n    match: PropTypes.array.isRequired   \r\n }\r\nexport default Movie;\r\n ","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {Link} from 'react-router-dom';\r\nimport ReactStars from 'react-rating-stars-component';\r\n\r\nconst Card = ({item}) => {\r\nconst {id, poster_path, title, vote_average} = item\r\n    return (\r\n      <div className='col-md-3 col-sm-6 mb-3 mx-auto'>\r\n      <div className='card'>\r\n          <Link to={`/movie/${id}`}>\r\n              <img src={`http://image.tmdb.org/t/p/original/${poster_path}`} alt={title} className='img-fluid'/>                   \r\n          </Link>               \r\n      </div>   \r\n      <div className='mt-3'>\r\n          <p style={{fontWeight : 'bolder'}}>{title}</p>\r\n          <div className='d-flex justify-content-between' >\r\n              <ReactStars count={vote_average} size={20} color={'#f4c10f'} className='d-inline'/>\r\n              <p className='fw-bold'> {vote_average} </p>\r\n          </div>\r\n      </div>     \r\n  </div>\r\n    )\r\n}\r\nCard.propTypes = {\r\n    item: PropTypes.array.isRequired  \r\n }\r\nexport default Card\r\n","import React, { useEffect, useState } from 'react'\r\nimport { useLocation } from \"react-router-dom\";   \r\nimport axios from 'axios'\r\nimport Card from '../components/Card'\r\n\r\nfunction useQuery() {\r\n    return new URLSearchParams(useLocation().search);\r\n  }\r\n\r\nconst SearchResult = () => {\r\n    let query = useQuery();\r\n    const [search, setSearch] = useState(query.get(\"name\"))\r\n    const [result, setResult] = useState([])\r\n    \r\n    useEffect(() => {\r\n        const fetchApi = async()=>{\r\n            const query = search\r\n            const apiKey = 'a2c5b0aa63f4810637029fdd61a1549b'\r\n            const url = `https://api.themoviedb.org/3/search/movie?api_key=${apiKey}&query=${query}`\r\n      \r\n            const respuesta = await axios.get(url)\r\n           \r\n            setResult(respuesta.data.results)\r\n       }\r\n       fetchApi()\r\n    }, [setSearch])\r\n\r\n    return (\r\n        <div className='row mt-3 '>\r\n    \r\n    {result.map((item, index) => (\r\n        <Card\r\n            key={index}\r\n            item={item}\r\n        />\r\n        ) )      \r\n    }\r\n      \r\n    </div>\r\n     \r\n    )\r\n}\r\n\r\nexport default SearchResult\r\n","import './sass/App.scss'\nimport 'bootstrap/dist/css/bootstrap.css';\nimport Navbar from './components/Navbar';\nimport { BrowserRouter as Router, Switch, Route} from 'react-router-dom';\n\nimport Home from './sections/Home.js';\nimport Movie from './sections/Movie';\nimport SearchResult from './sections/SearchResult';\n\n\nfunction App() {\n  \n  return(\n    <Router>\n      <Navbar/>\n      <Switch>\n        <Route exact path=\"/\" component={Home} />\n        <Route exact path=\"/movie/:id\" component={Movie}/>\n        <Route exact path=\"/search/\" component={SearchResult}/>\n      </Switch>\n    </Router>\n  )\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}